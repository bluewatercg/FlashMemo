name: Build Flutter APK

# 触发条件
on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # 允许手动触发

# 环境变量
env:
  FLUTTER_VERSION: '3.16.0'

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
    # 1. 检出代码
    - name: Checkout repository
      uses: actions/checkout@v4

    # 2. 设置Java环境
    - name: Setup Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    # 3. 安装Flutter
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: 'stable'
        cache: true

    # 4. 验证Flutter安装
    - name: Verify Flutter installation
      run: |
        flutter --version
        flutter doctor -v

    # 5. 获取依赖
    - name: Get dependencies
      run: flutter pub get

    # 6. 运行静态分析
    - name: Analyze code
      run: flutter analyze

    # 7. 运行测试（如果有的话）
    - name: Run tests
      run: flutter test --coverage
      continue-on-error: true

    # 8. 构建APK
    - name: Build APK
      run: |
        flutter build apk --release --split-per-abi
        flutter build apk --release --target-platform android-arm64

    # 9. 重命名APK文件
    - name: Rename APK files
      run: |
        cd build/app/outputs/flutter-apk/
        mv app-arm64-v8a-release.apk flashmemo-arm64-v8a-${{ github.run_number }}.apk || true
        mv app-armeabi-v7a-release.apk flashmemo-armeabi-v7a-${{ github.run_number }}.apk || true
        mv app-x86_64-release.apk flashmemo-x86_64-${{ github.run_number }}.apk || true
        mv app-release.apk flashmemo-universal-${{ github.run_number }}.apk || true
        ls -la

    # 10. 上传APK文件作为Artifacts
    - name: Upload APK Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: flashmemo-apk-${{ github.run_number }}
        path: |
          build/app/outputs/flutter-apk/*.apk
        retention-days: 30

    # 11. 创建Release（可选，仅在推送到main分支时）
    - name: Create Release
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: FlashMemo v1.0.${{ github.run_number }}
        body: |
          🎉 FlashMemo 移动端闪卡应用新版本发布！
          
          ## 📱 下载说明
          - **arm64-v8a**: 适用于大多数现代Android设备（推荐）
          - **armeabi-v7a**: 适用于较老的32位ARM设备
          - **x86_64**: 适用于x86_64模拟器或设备
          - **universal**: 通用版本（包含所有架构，文件较大）
          
          ## 🔄 更新内容
          - 构建号: ${{ github.run_number }}
          - 提交: ${{ github.sha }}
          
          ## 📋 安装要求
          - Android 5.0 (API 21) 或更高版本
          
          自动构建于: ${{ github.run_number }}
        files: |
          build/app/outputs/flutter-apk/*.apk
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # 12. 构建信息总结
    - name: Build Summary
      if: always()
      run: |
        echo "## 🏗️ 构建完成" >> $GITHUB_STEP_SUMMARY
        echo "- 构建号: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
        echo "- Flutter版本: ${{ env.FLUTTER_VERSION }}" >> $GITHUB_STEP_SUMMARY
        echo "- 分支: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- 提交: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📦 生成的APK文件:" >> $GITHUB_STEP_SUMMARY
        if [ -d "build/app/outputs/flutter-apk/" ]; then
          cd build/app/outputs/flutter-apk/
          for file in *.apk; do
            if [ -f "$file" ]; then
              size=$(du -h "$file" | cut -f1)
              echo "- $file ($size)" >> $GITHUB_STEP_SUMMARY
            fi
          done
        fi